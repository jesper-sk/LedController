<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:UberLedController">

    <Style x:Key="CloseButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="Background" Value="{DynamicResource DarkBackground}"/>
        <Setter Property="Foreground" Value="{DynamicResource HeaderbarTextColor}"/>
        <Setter Property="FontFamily" Value="Nirmala UI"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{TemplateBinding Background}" BorderBrush="{DynamicResource DarkLightAccent}" BorderThickness="0">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource RedCloseColor}"/>
                <!--<Setter Property="Foreground" Value="{DynamicResource LightAccentColor}"/>-->
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="MinMaxButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="Background" Value="{DynamicResource DarkBackground}"/>
        <Setter Property="Foreground" Value="{DynamicResource HeaderbarTextColor}"/>
        <Setter Property="FontFamily" Value="Nirmala UI"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{TemplateBinding Background}" BorderBrush="{DynamicResource DarkLightAccent}" BorderThickness="0">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource DarkSelected}"/>
                <!--<Setter Property="Foreground" Value="{DynamicResource LightAccentColor}"/>-->
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="{x:Type Button}" TargetType="{x:Type Button}">
        
    </Style>
</ResourceDictionary>